login页面书写的JavaScript代码全部采用严格模式.

1.检测是否登录:
如果没有登录,则跳转.这个检测只是简单地查看localstorage是否为空,而没有与服务器通信验证登录.尚不十分安全.从另外一个角度来说,可以通过这点盗用别人的帐号.具体方法不作说明.

2.激活页面上所有的tooltip:
bootstrap要求这样做来一次性激活所有的tooltip.(以后可以改成focus的时候激活,这样可以避免hover就出现tooltip.)

3.网页载入时强制focus到用户名框:
避免用户先填写其他文本框.便于登录流程的控制.

4.定义标记:
is_connected == 0 指未连接到服务器.
is_connected == 1 指已连接到服务器.

5.登录机能:
配合服务器运行的node.js程序,点击"登录"按钮之后,用socket.io发送用户名和id.

服务器程序处理它的事件名是:"login_server"

id的计算公式是:

md5(md5(password)+username)

实际发送的是一个对象:
clientdata = {
    id:$.md5($.md5($("#user_password").val())+$("#user_name").val()),
	username:$("#user_name").val()
}

由运行在服务器上的程序查询数据库之后,返回登录结果,然后,前端进行跳转或者提示"用户名或密码错误".

6.登录流程的控制:
焦点离开每个文本框的时候检测文本框是否为空.
若为空,则focus回这个文本框,tooltip提示"密码/用户名为空".

